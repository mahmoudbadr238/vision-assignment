# -*- coding: utf-8 -*-
"""Untitled15.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s8apipYtdin0fP1jZHNkVme1PbyusQKC
"""

#q1
#cv2.waitkey(0) waits untill any key pressed
#cv2.waitkey(1) waits for 1 ms the continue execution

#q2
import cv2
from google.colab.patches import cv2_imshow
img = cv2.imread("download.jpg")
rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
cv2_imshow(rgb)

#q3
import cv2
from google.colab.patches import cv2_imshow

img = cv2.imread("download.jpg")
choice = input("Choose: darken / lighten / invert: ").strip().lower()

if choice == "darken":
    result = cv2.subtract(img, 50)
elif choice == "lighten":
    result = cv2.add(img, 50)
elif choice == "invert":
    result = cv2.bitwise_not(img)
else:
    print("Invalid choice")
    exit()
cv2_imshow(img)
cv2_imshow(result)

#q4
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
img = cv2.imread("download.jpg", 0)
low, high = 100, 150
mask = cv2.inRange(img, low, high)

result = img.copy()
result[mask > 0] = 255

cv2_imshow(img)
cv2_imshow(result)

#q5
import cv2
import numpy as np
from google.colab.patches import cv2_imshow
img = cv2.imread("download.jpg", 0)

kernel = np.array([[0, -1, 0],
                   [-1, 5, -1],
                   [0, -1, 0]])  # example: sharpening

filtered = cv2.filter2D(img, -1, kernel)

cv2_imshow(img)
cv2_imshow(filtered)

#q6
import cv2
from google.colab.patches import cv2_imshow
img = cv2.imread("download.jpg", 0)
blur = cv2.GaussianBlur(img, (5,5), 0)
dog = cv2.Laplacian(blur, cv2.CV_64F)
cv2_imshow(img)
cv2_imshow(dog)

